###########################################################################################
1. azonos formara hozni a RIB-eket es a FIB-enket, mert majd egyuttes
eloszlasokat kell szamolni.

ezt ugy fogjuk csinalni mondjuk egy konkret RIB-re vagy FIB-re, hogy atirjuk
string-alakba: a string 2^32 hosszu lesz (4GB), az elso pozicioba beirjuk a
0.0.0.0 IP cimhez tartozo next-hop szimbolumot, a masodik pozicioba a 0.0.0.1
IP cimhez tartozo next-hop-ot, es igy tovabb, egeszen a 2^32 pozicioig, ahova
a 255.255.255.255 IP cimhez tartozo next-hop megy (invalid). mivel a string
nagyon nagy (nem hiszem, hogy a python megbirkozna vele), ezert egy ugy
nevezett futashossz-kodolt (RLE,
https://en.wikipedia.org/wiki/Run-length_encoding) formaban fogjuk tarolni: a
prefix fabol az RLE forma konnyen eloallithato, majd elmondom, hogyan.

2. egyuttes next-hop eloszlas szamitasa

tekintsunk mondjuk egy FIB peldanyt, legyen ennek a next-hop halmaza X es a
fenti string reprezentacioja (akar RLE formaban tarolva) s_x, es egy RIB
peldanyt, legyen ennek a next-hop halmaza Y es a string reprezentacioja s_y.
celunk, hogy a p(x,y) egyuttes eloszlast kiszamoljuk, ami azoknak az IP
cimeknek (string pozicioknak) a szama, ahol az IP cimhez a FIB-ben pont x a
next-hop, a RIB-ben meg y, osztva az osszes IP cim szamaval (2^32). ez egy
egyuttes eloszlas. legyenek a hataroloszlasai p(x) es p(y).

3. felteteles entropia szamitasa:
https://en.wikipedia.org/wiki/Conditional_entropy

H(Y|X) = \sum_{x\in X} p(x) H(Y|X=x) = -\sum_{x\in X} p(x) \sum_{y\in Y}
p(y|x) \log p(y|x) = -\sum_{x\in X} p(x) \sum_{y\in Y} p(y|x) \log
\frac{p(x,y)}{p(x)}

ide masold be, es megmutatja a kepletet:

http://asciimath.org

ezen kivul kell meg az X entropia:

H(X) = \sum_{x\in X} p(x) \log (1/p(x))

4. kolcsonos informacio szamitasa:
https://en.wikipedia.org/wiki/Mutual_information

ennek a meghatarozasa:

Intuitively, mutual information measures the information that X and Y share:
It measures how much knowing one of these variables reduces uncertainty about
the other.

nekunk meg pont ez kell: tudva a RIB next-hopjait (p(y)) mennyit tudunk a FIB
next-hopjairol (p(x)).


####################################################################################



cel:
1. a FIB-ek statisztikainak megertese: miben ternek el a routeviews-rol letoltott RIBek es a valos routerek FIBjeinek statsztikai (prefix szinten azt
    gondljuk keves az elteres, next-hop szinten a RIB abszolut mas eloszlast mutat) + FIB generator modell (routeviews RIB-prefixei + valami local route-ok
    /24 alatt + Zipf next-hop eloszlas) + ezt viszonylag stabilan mondhatjuk az idoben

2. jofajta FIB entropia  metrikak: konnyen szamolhato/ertheto + jol becsli a tomoritett meretet + intuitiv (ezert nem jo a prefix fa entropiaja): jeloltek:
standard prefix-fa entropia, string magasabb rendu entropia, string run-length encoding

3. evaluation: mennyire jok az entropiaink es mennyire jo a modell

Felepites:

0 RIB-FIB elteresek: abra- next-hops: FIB has real next-hop info, RIBs contain random next-hops (shortest AS path)
- prefixes: FIB contains internal routes (inside AS, learned from IGP) + local routes (local interfaces) + recursively looked up routes (EGP -> IGP)
- operational issues: RIBs merge data from multiple routers + management filtering prefixes on the RIB->FIB interface??? + default gw

1. adatletoltes-tisztitas

1.1- FIBek: full-BGP FIB-ek az adathalmazunkbol: vh1, vh2, bme, szeged
- default gw es default gw nelkul is
- sokszor dupla next-hop van: egyelore szedjuk ki az elsot, de aztan ra kell kerdezni a hbone-ban
+ kesobb esegleg be lehet hozni a nem full-bgp fib-eket is az adatsorbol (internet2, maradek hbone), de ezeket nem lehet osszehasonlitani a

2. Routeviews: par vantage points: LINX, ???? (europa, usa, ausztralia)
- 2013-tol napi statisztikakat letolteni: ugyanazokra a napokra, ugyanabbol az orabol/percbol

- idosoranalizis: outlier-ek: ures es FIBek eltuntetese: az elozo het atlagatol legalabb 95%-kal elter

> - RIB-FIB statistics: number of entries/time, more-specifics/time, prefix-length-distribiution/time, par erdekes dolog kene ide
    RIB/FIB: key-value store, ahol a key-eknek van belso strukturaja

kerdes: mennyire kovetkeztethetunk a RIB-vol a FIB-re??? egyszerre szeretnenk az egesz idosort jellemzi statisztikakat es konkretan idobeli eloszlasokat

statisztikak:

I./ csak a prefixek szintjen: prefixek szama + belso strukturajuk (prefix-length/more-less specifics)

1. number of prefixes over time: az egesz idosort jellemzo statisztikak: szezonalitas + tendencia + korrelacios matrix (osszes parra)

2. prefix-length statisztikak: az idoben: varhato ertek, median, variance

3. (RIB - FIB) over time, (FIB - RIB) over time szintenkent (lehet, hogy a /8-akra jol tudunk kovtkeztetni a RIBbol, de a /24-ekre nem)
-- kell minden parra (RIB-RIB, RIB-FIB, FIB-FIB)

4. less/more-specifics idobeli szamuk:

- number of more specifics (has parent), number of less specifics (has children) + independent prefixek
- average/max/min number of _all_ children for less specifics (if parent, how many children it has, children of children also matter)
- average/max/min number of _immediate_ children for less specifics (if parent, how many immediate children it has, excluding chuldren of children, etc.)

5. bejegyzesek lifetime

II/ next-hopok szintjen (value-ter): legkozelebb

 > - FIB stats (unavailable on the RIB): next-hop stats (number/time, distribution, robustness in time, etc...)
